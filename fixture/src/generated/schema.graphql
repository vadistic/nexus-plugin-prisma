### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Account {
  createdAt: DateTime!
  id: String!
  updatedAt: DateTime!
  workspaces: [Workspace]
}

input AccountFilter {
  """"""
  every: AccountWhere

  """"""
  none: AccountWhere

  """"""
  some: AccountWhere
}

input AccountOrderBy {
  createdAt: SortDirection
  id: SortDirection
  updatedAt: SortDirection
}

input AccountWhere {
  """"""
  AND: [AccountWhere]

  """Filter by Account's createdAt"""
  createdAt: DateTimeFilter

  """Filter by Account's id"""
  id: StringFilter

  """"""
  NOT: AccountWhere

  """"""
  OR: [AccountWhere]

  """Filter by Account's updatedAt"""
  updatedAt: DateTimeFilter

  """Filter by Account's workspaces"""
  workspaces: WorkspaceFilter
}

type Application {
  createdAt: DateTime!
  id: String!
  updatedAt: DateTime!
}

input ApplicationFilter {
  """"""
  every: ApplicationWhere

  """"""
  none: ApplicationWhere

  """"""
  some: ApplicationWhere
}

input ApplicationOrderBy {
  createdAt: SortDirection
  id: SortDirection
  updatedAt: SortDirection
}

input ApplicationWhere {
  """"""
  AND: [ApplicationWhere]

  """Filter by Application's createdAt"""
  createdAt: DateTimeFilter

  """Filter by Application's id"""
  id: StringFilter

  """"""
  NOT: ApplicationWhere

  """"""
  OR: [ApplicationWhere]

  """Filter by Application's updatedAt"""
  updatedAt: DateTimeFilter
}

input BooleanFilter {
  """"""
  equals: Boolean

  """"""
  in: [Boolean]

  """"""
  not: Boolean

  """"""
  notInt: [Boolean]
}

input BooleanNullableFilter {
  """"""
  equals: Boolean

  """"""
  exists: Boolean

  """"""
  in: [Boolean]

  """"""
  not: Boolean

  """"""
  notInt: [Boolean]
}

type Candidate {
  createdAt: DateTime!
  emails: [String]
  firstName: String
  headline: String
  id: String!
  lastName: String
  links: [String]
  phones: [String]
  updatedAt: DateTime!
}

input CandidateFilter {
  """"""
  every: CandidateWhere

  """"""
  none: CandidateWhere

  """"""
  some: CandidateWhere
}

input CandidateOrderBy {
  createdAt: SortDirection
  emails: SortDirection
  firstName: SortDirection
  headline: SortDirection
  id: SortDirection
  lastName: SortDirection
  links: SortDirection
  phones: SortDirection
  updatedAt: SortDirection
}

input CandidateWhere {
  """"""
  AND: [CandidateWhere]

  """Filter by Candidate's createdAt"""
  createdAt: DateTimeFilter

  """Filter by Candidate's emails"""
  emails: StringNullableFilter

  """Filter by Candidate's firstName"""
  firstName: StringNullableFilter

  """Filter by Candidate's headline"""
  headline: StringNullableFilter

  """Filter by Candidate's id"""
  id: StringFilter

  """Filter by Candidate's lastName"""
  lastName: StringNullableFilter

  """Filter by Candidate's links"""
  links: StringNullableFilter

  """"""
  NOT: CandidateWhere

  """"""
  OR: [CandidateWhere]

  """Filter by Candidate's phones"""
  phones: StringNullableFilter

  """Filter by Candidate's updatedAt"""
  updatedAt: DateTimeFilter
}

type Client {
  createdAt: DateTime!
  id: String!
  updatedAt: DateTime!
}

input ClientFilter {
  """"""
  every: ClientWhere

  """"""
  none: ClientWhere

  """"""
  some: ClientWhere
}

input ClientOrderBy {
  createdAt: SortDirection
  id: SortDirection
  updatedAt: SortDirection
}

input ClientWhere {
  """"""
  AND: [ClientWhere]

  """Filter by Client's createdAt"""
  createdAt: DateTimeFilter

  """Filter by Client's id"""
  id: StringFilter

  """"""
  NOT: ClientWhere

  """"""
  OR: [ClientWhere]

  """Filter by Client's updatedAt"""
  updatedAt: DateTimeFilter
}

""""""
scalar DateTime

input DateTimeFilter {
  """"""
  equals: DateTime

  """"""
  gt: DateTime

  """"""
  gte: DateTime

  """"""
  in: [DateTime]

  """"""
  lt: DateTime

  """"""
  lte: DateTime

  """"""
  not: DateTime

  """"""
  notInt: [DateTime]
}

input DateTimeNullableFilter {
  """"""
  equals: DateTime

  """"""
  exists: Boolean

  """"""
  gt: DateTime

  """"""
  gte: DateTime

  """"""
  in: [DateTime]

  """"""
  lt: DateTime

  """"""
  lte: DateTime

  """"""
  not: DateTime

  """"""
  notInt: [DateTime]
}

type FieldDefinition {
  createdAt: DateTime!
  description: String
  id: String!
  name: String!
  type: FieldType!
  updatedAt: DateTime!
}

input FieldDefinitionFilter {
  """"""
  every: FieldDefinitionWhere

  """"""
  none: FieldDefinitionWhere

  """"""
  some: FieldDefinitionWhere
}

input FieldDefinitionOrderBy {
  createdAt: SortDirection
  description: SortDirection
  id: SortDirection
  name: SortDirection
  type: SortDirection
  updatedAt: SortDirection
}

input FieldDefinitionWhere {
  """"""
  AND: [FieldDefinitionWhere]

  """Filter by FieldDefinition's createdAt"""
  createdAt: DateTimeFilter

  """Filter by FieldDefinition's description"""
  description: StringNullableFilter

  """Filter by FieldDefinition's id"""
  id: StringFilter

  """Filter by FieldDefinition's name"""
  name: StringFilter

  """"""
  NOT: FieldDefinitionWhere

  """"""
  OR: [FieldDefinitionWhere]

  """Filter by FieldDefinition's type"""
  type: FieldTypeEnumFilter

  """Filter by FieldDefinition's updatedAt"""
  updatedAt: DateTimeFilter
}

enum FieldType {
  BOOLEAN
  NUMBER
  SCORE
  TEXT
  TEXTAREA
}

input FieldTypeEnumFilter {
  """"""
  equals: FieldType

  """"""
  in: [FieldType]

  """"""
  not: FieldType

  """"""
  notInt: [FieldType]
}

input FieldTypeNullableEnumFilter {
  """"""
  equals: FieldType

  """"""
  exists: Boolean

  """"""
  in: [FieldType]

  """"""
  not: FieldType

  """"""
  notInt: [FieldType]
}

type FieldValue {
  definition: FieldDefinition!
  value: Json!
}

input FieldValueFilter {
  """"""
  every: FieldValueWhere

  """"""
  none: FieldValueWhere

  """"""
  some: FieldValueWhere
}

input FieldValueOrderBy {
  value: SortDirection
}

input FieldValueWhere {
  """"""
  AND: [FieldValueWhere]

  """Filter by FieldValue's definition"""
  definition: FieldDefinitionWhere

  """"""
  NOT: FieldValueWhere

  """"""
  OR: [FieldValueWhere]

  """Filter by FieldValue's value"""
  value: JsonFilter
}

input FloatFilter {
  """"""
  equals: Float

  """"""
  gt: Float

  """"""
  gte: Float

  """"""
  in: [Float]

  """"""
  lt: Float

  """"""
  lte: Float

  """"""
  not: Float

  """"""
  notInt: [Float]
}

input FloatNullableFilter {
  """"""
  equals: Float

  """"""
  exists: Boolean

  """"""
  gt: Float

  """"""
  gte: Float

  """"""
  in: [Float]

  """"""
  lt: Float

  """"""
  lte: Float

  """"""
  not: Float

  """"""
  notInt: [Float]
}

input IDFilter {
  """"""
  equals: ID

  """"""
  in: [ID]

  """"""
  not: ID

  """"""
  notInt: [ID]
}

input IDNullableFilter {
  """"""
  equals: ID

  """"""
  exists: Boolean

  """"""
  in: [ID]

  """"""
  not: ID

  """"""
  notInt: [ID]
}

input IntFilter {
  """"""
  equals: Int

  """"""
  gt: Int

  """"""
  gte: Int

  """"""
  in: [Int]

  """"""
  lt: Int

  """"""
  lte: Int

  """"""
  not: Int

  """"""
  notInt: [Int]
}

input IntNullableFilter {
  """"""
  equals: Int

  """"""
  exists: Boolean

  """"""
  gt: Int

  """"""
  gte: Int

  """"""
  in: [Int]

  """"""
  lt: Int

  """"""
  lte: Int

  """"""
  not: Int

  """"""
  notInt: [Int]
}

enum JobStatus {
  CLOSED
  DRAFT
  OPEN
}

input JobStatusEnumFilter {
  """"""
  equals: JobStatus

  """"""
  in: [JobStatus]

  """"""
  not: JobStatus

  """"""
  notInt: [JobStatus]
}

input JobStatusNullableEnumFilter {
  """"""
  equals: JobStatus

  """"""
  exists: Boolean

  """"""
  in: [JobStatus]

  """"""
  not: JobStatus

  """"""
  notInt: [JobStatus]
}

""""""
scalar Json

input JsonFilter {
  """"""
  equals: Json

  """"""
  in: [Json]

  """"""
  not: Json

  """"""
  notInt: [Json]
}

input JsonNullableFilter {
  """"""
  equals: Json

  """"""
  exists: Boolean

  """"""
  in: [Json]

  """"""
  not: Json

  """"""
  notInt: [Json]
}

type Mutation {
  ok: Boolean
}

type Pipeline {
  createdAt: DateTime!
  id: String!
  updatedAt: DateTime!
}

input PipelineFilter {
  """"""
  every: PipelineWhere

  """"""
  none: PipelineWhere

  """"""
  some: PipelineWhere
}

input PipelineOrderBy {
  createdAt: SortDirection
  id: SortDirection
  updatedAt: SortDirection
}

input PipelineWhere {
  """"""
  AND: [PipelineWhere]

  """Filter by Pipeline's createdAt"""
  createdAt: DateTimeFilter

  """Filter by Pipeline's id"""
  id: StringFilter

  """"""
  NOT: PipelineWhere

  """"""
  OR: [PipelineWhere]

  """Filter by Pipeline's updatedAt"""
  updatedAt: DateTimeFilter
}

type Query {
  ok: Boolean
  tag: Tag
  tags: [Tag]!
}

type Review {
  application: Application!
  author: User!
  createdAt: DateTime!
  id: String!
  message: String
  score: Int
  stage: Stage
  updatedAt: DateTime!
}

input ReviewFilter {
  """"""
  every: ReviewWhere

  """"""
  none: ReviewWhere

  """"""
  some: ReviewWhere
}

input ReviewOrderBy {
  createdAt: SortDirection
  id: SortDirection
  message: SortDirection
  score: SortDirection
  updatedAt: SortDirection
}

input ReviewWhere {
  """"""
  AND: [ReviewWhere]

  """Filter by Review's application"""
  application: ApplicationWhere

  """Filter by Review's author"""
  author: UserWhere

  """Filter by Review's createdAt"""
  createdAt: DateTimeFilter

  """Filter by Review's id"""
  id: StringFilter

  """Filter by Review's message"""
  message: StringNullableFilter

  """"""
  NOT: ReviewWhere

  """"""
  OR: [ReviewWhere]

  """Filter by Review's score"""
  score: IntNullableFilter

  """Filter by Review's stage"""
  stage: StageWhere

  """Filter by Review's updatedAt"""
  updatedAt: DateTimeFilter
}

enum SortDirection {
  ASC
  DESC
}

type Stage {
  createdAt: DateTime!
  id: String!
  updatedAt: DateTime!
}

input StageFilter {
  """"""
  every: StageWhere

  """"""
  none: StageWhere

  """"""
  some: StageWhere
}

input StageOrderBy {
  createdAt: SortDirection
  id: SortDirection
  updatedAt: SortDirection
}

enum StageType {
  INITIAL
  PROCESS
  REJECT
  SUCCESS
}

input StageTypeEnumFilter {
  """"""
  equals: StageType

  """"""
  in: [StageType]

  """"""
  not: StageType

  """"""
  notInt: [StageType]
}

input StageTypeNullableEnumFilter {
  """"""
  equals: StageType

  """"""
  exists: Boolean

  """"""
  in: [StageType]

  """"""
  not: StageType

  """"""
  notInt: [StageType]
}

input StageWhere {
  """"""
  AND: [StageWhere]

  """Filter by Stage's createdAt"""
  createdAt: DateTimeFilter

  """Filter by Stage's id"""
  id: StringFilter

  """"""
  NOT: StageWhere

  """"""
  OR: [StageWhere]

  """Filter by Stage's updatedAt"""
  updatedAt: DateTimeFilter
}

input StringFilter {
  """"""
  contains: String

  """"""
  endsWith: String

  """"""
  equals: String

  """"""
  in: [String]

  """"""
  not: String

  """"""
  notInt: [String]

  """"""
  startsWith: String
}

input StringNullableFilter {
  """"""
  contains: String

  """"""
  endsWith: String

  """"""
  equals: String

  """"""
  exists: Boolean

  """"""
  in: [String]

  """"""
  not: String

  """"""
  notInt: [String]

  """"""
  startsWith: String
}

type Tag {
  candidates: [Candidate]
  createdAt: DateTime!
  description: String
  id: String!
  name: String!
  updatedAt: DateTime!
}

input TagFilter {
  """"""
  every: TagWhere

  """"""
  none: TagWhere

  """"""
  some: TagWhere
}

input TagOrderBy {
  createdAt: SortDirection
  description: SortDirection
  id: SortDirection
  name: SortDirection
  updatedAt: SortDirection
}

enum TagType {
  APPLICATION
  CANDIDATE
  JOB
}

input TagTypeEnumFilter {
  """"""
  equals: TagType

  """"""
  in: [TagType]

  """"""
  not: TagType

  """"""
  notInt: [TagType]
}

input TagTypeNullableEnumFilter {
  """"""
  equals: TagType

  """"""
  exists: Boolean

  """"""
  in: [TagType]

  """"""
  not: TagType

  """"""
  notInt: [TagType]
}

input TagWhere {
  """"""
  AND: [TagWhere]

  """Filter by Tag's candidates"""
  candidates: CandidateFilter

  """Filter by Tag's createdAt"""
  createdAt: DateTimeFilter

  """Filter by Tag's description"""
  description: StringNullableFilter

  """Filter by Tag's id"""
  id: StringFilter

  """Filter by Tag's name"""
  name: StringFilter

  """"""
  NOT: TagWhere

  """"""
  OR: [TagWhere]

  """Filter by Tag's updatedAt"""
  updatedAt: DateTimeFilter
}

type User {
  createdAt: DateTime!
  id: String!
  updatedAt: DateTime!
}

input UserFilter {
  """"""
  every: UserWhere

  """"""
  none: UserWhere

  """"""
  some: UserWhere
}

input UserOrderBy {
  createdAt: SortDirection
  id: SortDirection
  updatedAt: SortDirection
}

input UserWhere {
  """"""
  AND: [UserWhere]

  """Filter by User's createdAt"""
  createdAt: DateTimeFilter

  """Filter by User's id"""
  id: StringFilter

  """"""
  NOT: UserWhere

  """"""
  OR: [UserWhere]

  """Filter by User's updatedAt"""
  updatedAt: DateTimeFilter
}

type Workspace {
  createdAt: DateTime!
  description: String
  id: String!
  name: String!
  type: WorkspaceType!
  updatedAt: DateTime!
  website: String
}

input WorkspaceFilter {
  """"""
  every: WorkspaceWhere

  """"""
  none: WorkspaceWhere

  """"""
  some: WorkspaceWhere
}

input WorkspaceOrderBy {
  createdAt: SortDirection
  description: SortDirection
  id: SortDirection
  name: SortDirection
  type: SortDirection
  updatedAt: SortDirection
  website: SortDirection
}

enum WorkspaceType {
  FREE
}

input WorkspaceTypeEnumFilter {
  """"""
  equals: WorkspaceType

  """"""
  in: [WorkspaceType]

  """"""
  not: WorkspaceType

  """"""
  notInt: [WorkspaceType]
}

input WorkspaceTypeNullableEnumFilter {
  """"""
  equals: WorkspaceType

  """"""
  exists: Boolean

  """"""
  in: [WorkspaceType]

  """"""
  not: WorkspaceType

  """"""
  notInt: [WorkspaceType]
}

input WorkspaceWhere {
  """"""
  AND: [WorkspaceWhere]

  """Filter by Workspace's createdAt"""
  createdAt: DateTimeFilter

  """Filter by Workspace's description"""
  description: StringNullableFilter

  """Filter by Workspace's id"""
  id: StringFilter

  """Filter by Workspace's name"""
  name: StringFilter

  """"""
  NOT: WorkspaceWhere

  """"""
  OR: [WorkspaceWhere]

  """Filter by Workspace's type"""
  type: WorkspaceTypeEnumFilter

  """Filter by Workspace's updatedAt"""
  updatedAt: DateTimeFilter

  """Filter by Workspace's website"""
  website: StringNullableFilter
}
